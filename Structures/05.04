#include <stdio.h>

struct St
{
	int k;
	float f;
	char ch;
};

int main()
{
	int i = 0;
	struct St** st = malloc(sizeof(struct St));
	/*struct St** st;
	st = malloc(5 * sizeof(struct St));*/
	for (i = 0; i < 4; i++)
	{
		*(st + i) = malloc(sizeof(struct St));
	}
	(*((*st) + 1)).f = 2.5;
	printf("%.2f", (*((*st +i) + 1)).f);

	for (i = 0; i < 4; i++)
	{
		free(*(st + i));
	}
}
--------------------
#include <stdio.h>
#include <stdlib.h>
#include <Windows.h>

struct St
{
	int k;
	float f;
	char ch;
};

int main()
{
	int i = 0;
	struct St** st;
	st = malloc(5 * sizeof(struct St*));
	for (int i = 0; i < 4; i++)
	{
		*(st + i) = malloc(sizeof(struct St));
	}
	(*(*(st + i))).k = 5;
	printf("%i", (*(*(st +i))).k);

	for (i = 0; i < 4; i++)
	{
		free(*(st + i));
	}
}
-----------------
#include <stdio.h>
#include <stdlib.h>
#include <Windows.h>

struct St
{
	int k;
	float f;
	char ch;
};

int main()
{
	int i = 0;
	struct St** st;
	st = malloc(5 * sizeof(struct St*));
	for (int i = 0; i < 4; i++)
	{
		*(st + i) = malloc(sizeof(struct St));
	}
	(*(*(st + i))).k = 5;
	printf("%i", (*(*(st +i))).k);

	for (i = 0; i < 4; i++)
	{
		free(*(st + i));
	}
	free(st);
}
--------------------
#include <stdio.h>
#include <stdlib.h>
#include <Windows.h>

struct St
{
	float Data;
	struct St* Next;
};

void print(struct St* list)
{
	while (list != 0)
	{
		printf("Data: %.2f\n", list->Data);
		list = list->Next;
	}
}
struct St* allocItem(float data,struct St* previos)
{
	struct St* item = malloc(sizeof(struct St));
	item->Data = data;
	item->Next = NULL;

	if (previos != NULL)
	{
		previos->Next = item;
	}
	return item;
}

void main()
{
	struct St* first  = allocItem(111.11,NULL);
	struct St* second = allocItem(13.12, first);
	struct St* third = allocItem(423.3, second);

	print(first);
}
