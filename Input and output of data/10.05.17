#include <Windows.h>
#include <stdio.h>
 
int main()
{
    WIN32_FIND_DATAA found;
    HANDLE findResult =
        FindFirstFileA(
            "D:\\Winners\\*.jpg",
            &found);
 
    if (findResult == INVALID_HANDLE_VALUE)
    {
        printf("Files not found.");
        return 1;
    }
 
    printf("File found.");
}
----------------------------
#include <Windows.h>
#include <stdio.h>

int main()
{
	WIN32_FIND_DATAA found;
	HANDLE findResult =
		FindFirstFileA(
			"D:\\Winners\\*.bin",
			&found);

	if (findResult == INVALID_HANDLE_VALUE)
	{
		printf("Files not found.");
		return 1;
	}

	printf("File found:%s.",found.cFileName);
}
-------------------------------------------
#include <Windows.h>
#include <stdio.h>

int main()
{
	WIN32_FIND_DATAA found;
	HANDLE findResult =
		FindFirstFileA(
			"D:\\Winners\\*.bin",
			&found);

	if (findResult == INVALID_HANDLE_VALUE)
	{
		printf("Files not found.");
		return 1;
	}
	while (FileNextFileA(findResult, &found) != INVALID_HANDLE_VALUE)
	{
		printf("File found: %s.", found.cFileName);
	}

}
---------------------------------------------
do {
		printf("File found: %s.", found.cFileName);
	} while (FileNextFileA(findResult, &found);
-------------------------------------------
int main(int argc,char* argv[])
-------------------------------------------
#include <Windows.h>
#include <stdio.h>
#include <stdbool.h>

int main(int argc,char* argv[])
{
	WIN32_FIND_DATAA found;
	HANDLE findResult =
		FindFirstFileA(
			"D:\\Winners\\*.bin",
			&found);

	if (findResult == INVALID_HANDLE_VALUE)
	{
		printf("Files not found.");
		return 1;
	}
	do {
		if (strcmp(found.cFileName, ".") == 0 || strcmp(found.cFileName, "..") == 0)
		{
			continue;
		}
		//found.ftCreationTime
		//FileTimeToSystemTime(ftCreationTime,)
		bool isDirectory = found.dwFileAtributes & FILE_ATTRIBUTE_DIRECTORY;
		printf("%d", isDirectory);
		printf("File found: \"%s\".\n", found.cFileName);
	} while (FileNextFileA(findResult, &found));
	findClose(findResult);
}
--------------------------------------------
#include <Windows.h>*******
#include <stdio.h>
#include <stdbool.h>

int main()
{
	WIN32_FIND_DATAA found;
	HANDLE findResult =
		FindFirstFileA(
			"d:\\winners\\*.jpg",
			&found);

	if (findResult == INVALID_HANDLE_VALUE)
	{
		printf("Files not found.");
		return 1;
	}
	// WinAPI
	do
	{
		if (strcmp(found.cFileName, ".") == 0 ||
			strcmp(found.cFileName, "..") == 0)
		{
			continue;
		}
		
		SYSTEMTIME time;
		FileTimeToSystemTime(
			&found.ftLastAccessTime, &time);
		printf("[%d.%d.%d] ", time.wDay, time.wMonth, time.wYear);
		bool isDirectory =
			found.dwFileAttributes &
			FILE_ATTRIBUTE_DIRECTORY;
		printf("%s found: \"%s\".\n",
			(isDirectory ? "Folder" : "File"),
			found.cFileName);
	} while (FindNextFileA(findResult,
		&found));

	FindClose(findResult);
}
-------------------------------------------
#include <stdbool.h>
#include <Windows.h>

void foo();
void foo1();

void foo()
{
	printf("[%d] %s\n", time(0),
		"foo start");

	Sleep(1000);
	foo1();

	printf("[%d] %s\n", time(0),
		"foo end");
}

void foo1()
{
	printf("[%d] %s\n", time(0),
		"foo1 start");

	Sleep(1000);

	printf("[%d] %s\n", time(0),
		"foo1 end");
}

int main()
{
	printf("[%d] %s\n", time(0),
		"main start");

	foo();

	printf("[%d] %s\n", time(0),
		"main end");
}
-----------------------------------------
#include <stdbool.h>
#include <stdio.h>
#include <Windows.h>
//arg(foo)->#arg = "foo"
#define LOG_FN_START(arg) printf("[%d] %s\n", time(0),\
arg " start");
#define LOG_FN_FINISH(arg) printf("[%d] %s\n", time(0),\
arg " end");

void foo();
void foo1();

void foo()
{
	LOG_FN_START("foo")

	Sleep(1000);
	foo1();

	LOG_FN_FINISH("foo")

}

void foo1()
{
	LOG_FN_START("foo1");
	Sleep(1000);
	LOG_FN_FINISH("foo1")

}

int main()
{
	LOG_FN_START("main")
	foo();
	LOG_FN_FINISH("main")
}
----------------------------------------
#define LOG_FN_START(arg) printf("[%d] %s\n", time(0),\
__FUNCTION__" start");
#define LOG_FN_FINISH(arg) printf("[%d] %s\n", time(0),\
__FUNCTION__ " end");
----------------------------------------
#ifdef __STDC_VERSION__
	printf("STDC_VERSION: %s", STDC_VERSION);
#endif
#ifndef true
#include <stdbool.h>
#endif
#undef true//при true работать не будет
#define true false :D
