void strCopy(char* from, char* to)
{
    while (*from != 0 && *from != '\n')
    {
        *to = *from;
        from++;
        to++;
    }
    *to = 0;
}
 
void clearArray(char array[][256],
    int size)
{
    for (int i = 0; i < size; i++)
    {
        array[i][0] = 0;
    }
}
 
void printArray(char array[][256],
    int size)
{
    for (int i = 0; i < size; i++)
    {
        printf("nameCell[%i]: %s\n",
            i, array[i]);
    }
}
 
int main()
{
    char nameColumn[10][256];
    clearArray(nameColumn, 10);
    // char**
    char name[256];
    for (int i = 0; i < 10; i++)
    {
        printf("Enter name: ");
        fgets(nameColumn[i], 256, stdin);
    }
   
    printArray(nameColumn, 10);
}
-----------------------------------
#include <stdio.h>
 
void strCopy(char* from, char* to)
{
    while (*from != 0 && *from != '\n')
    {
        *to = *from;
        from++;
        to++;
    }
    *to = 0;
}
 
void clearArray(char array[][10][256],
    int colCount, int rowCount)
{
    for (int col = 0; col < colCount;
        col++)
    {
        for (int row = 0; row < rowCount;
            row++)
        {
            array[col][row][0] = 0;
        }
    }
}
 
void printArray(char array[][10][256],
    int colCount, int rowCount)
{
    printf("Name\tPhone\n");
    for (int row = 0; row < rowCount;
        row++)
    {
        for (int col = 0; col < colCount;
            col++)
        {
            printf("%s\t",
                array[col][row]);
        }
        printf("\n");
    }
}
 
int main()
{
    char addressBook[2][10][256];
    clearArray(addressBook, 2, 10);
 
    char name[256];
    char phone[256];
    for (int user = 0; user < 2; user++)
    {
        printf("Enter name: ");
        fgets(name, 256, stdin);
        strCopy(name, addressBook[0][user]);
        printf("Enter phone: ");
        fgets(phone, 256, stdin);
        strCopy(phone, addressBook[1][user]);
    }
   
    printArray(addressBook, 2, 10);
}
-----------------------------
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
 
#define BOOK_COUNT 3
#define NAME_LENGTH 50
#define AUTHOR_LENGTH 30
 
struct Book
{
    char Author[AUTHOR_LENGTH];
    char Name[NAME_LENGTH];
    int Year;
};
 
void cleanInput()
{
    char ch;
    do
    {
        ch = getchar();
    } while (ch != '\n' && ch != EOF);
}
 
void printLibrary(struct Book books[BOOK_COUNT],
    int count)
{
    for (int i = 0; i < BOOK_COUNT; i++)
    {
        printf("---\nBook name: %s\n", books[i].Name);
        printf("Author: %s\n", books[i].Author);
        printf("Year: %i\n", books[i].Year);
    }
}
 
int bookCompare(struct Book book1,
    struct Book book2)
{
    return strcmp(book1.Name, book2.Name);
}
 
void sortLibrary(struct Book books[BOOK_COUNT],
    int count)
{
    for (size_t i = 0; i < BOOK_COUNT - 1; i++)
    {
        for (size_t j = 0; j < BOOK_COUNT - i - 1; j++)
        {
            if (bookCompare(books[j], books[j + 1]))
            {
                struct Book tmp = books[j];
                books[j] = books[j + 1];
                books[j + 1] = tmp;
            }
        }
    }
}
 
int main()
{
    struct Book books[BOOK_COUNT] =
    {
        {
            .Name = "Book3",
            .Author = "Author3",
            .Year = 2013
        },
        {
            .Name = "Book2",
            .Author = "Author2",
            .Year = 2017
        },
        {
            .Name = "Book1",
            .Author = "Author1",
            .Year = 2016
        }      
    };
 
    printLibrary(books, BOOK_COUNT);
    sortLibrary(books, BOOK_COUNT);
    printf("===== After sorting ======");
    printLibrary(books, BOOK_COUNT);
}
